{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","msg","document","createElement","className","innerText","nodeName","id","Promise","resolve","reject","addEventListener","e","target","printMessage","message","querySelector","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAElBC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAY,UAEhBH,EAAII,UAAY,UAAUL,OAAAA,EACrBD,qBAAAA,GAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,GADtC,KAWO,OAAA,IAAIC,QARM,SAACC,EAASC,GACzBX,EAAQY,iBAAiBX,EAAW,SAACY,GAC/BA,EAAEC,SAAWd,GACfU,EAAQR,OAQhB,IAAMa,EAAe,SAACC,GAEAb,SAASc,cAAc,QAE/BC,OAAOF,IAGrBG,OAAOC,QAAU,CACfrB,QAAAA,EACAgB,aAAAA","file":"main.3e54ce01.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n// write your code here\n  const msg = document.createElement('div');\n\n  msg.className = 'message';\n\n  msg.innerText = `It was ${eventName} on the element: `\n  + `${element.nodeName}, id: ${element.id}.`;\n\n  const resolver = (resolve, reject) => {\n    element.addEventListener(eventName, (e) => {\n      if (e.target === element) {\n        resolve(msg);\n      }\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n// write your code here\n  const rootElement = document.querySelector('body');\n\n  rootElement.append(message);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}